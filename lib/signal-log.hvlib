(make-prologue)

(defparameter *signal-log-suffix* ".slog")
(defmacro my-my-inc (sym)
    `(v_<=# ,sym (v_+ ,sym 1)))

(defmacro make-signal-log (name &optional (_width 1))
    `(v_module ,name ((input clk) (input (,_width ,name)) (input tb_is_finished))
            (v_initial
              (v_display "[ (:" ,(symbol-name name) " ." ,_width " )"))
            (v_reg (,_width probe_signal_r))
            (v_reg (,_width probe_signal_rr))
            (v_reg= (2 tb_finished_state_r) 0)
            (v_reg= (32 count) 0)
            (v_always ((posedge clk))
                (v_<=# probe_signal_rr probe_signal_r)
                (v_<=# probe_signal_r ,name)
                (v_if (v_== probe_signal_r probe_signal_rr)
                    (my-my-inc count)
                    (v_if (v_== tb_finished_state_r 0)
                      (progn
                       (v_display "(%d . #x%x)" (v_+ count 1) probe_signal_rr)
                       (v_<=# count 0)))))
            (v_always ((posedge clk))
                (v_case tb_finished_state_r
                    (0
                        (v_if (v_== tb_is_finished 1)
                          (v_<=# tb_finished_state_r 1)))
                    (1
                      (v_display "(%d . #h%x)" count probe_signal_rr)
                      (v_display "]")
                      (v_<=# tb_finished_state_r 2))
                    (default
                        ; nothing to do
                        (v_<=# tb_finished_state_r tb_finished_state_r)
                        )))))


(when (eq *__name__* :__main__)
    (setf *transport-delay* 1)
    (make-signal-log data16 16)
    (v_module tb ()
     (v_reg clk)
     (v_reg rst)

     (v_always ()
        (nli)
        (v_# 5)
        (v_= clk (v_! clk)))

     (v_wire hsync vsync)
     (v_reg= (16 probe) 0)
     (v_reg= tb_is_finished 0)

     (data16 :name data16 clk probe tb_is_finished)
     (v_initial
        (v_dumpfile "data16.vcd")
        (v_dumpvars 0 data16)

        (v_= clk 0)
        (v_# 200)
        (v_= rst 0)

        (v_# 200)
        (v_= rst 1)

        (v_# 200)
        (v_= rst 0)

        (v_# 200)
        (v_= probe 1)

        (v_# 4000)
        (v_= rst 0)

        (v_# 200)
        (v_= probe 0)

        (v_# 200)
        (v_= tb_is_finished 1)

        (v_# 200)
        (v_= probe 1)

        (v_# 200)
        (v_finish))))

(make-epilogue)
